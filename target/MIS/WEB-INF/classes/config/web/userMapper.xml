<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.sun.mis.mapper.UserMapper">
	<resultMap type="User" id="resultUser">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="loginPassword" column="login_password" />
		<result property="sex" column="sex" />
		<result property="tel" column="tel" />
		<result property="state" column="state" />
		<result property="createrId" column="creater_id" />
		<result property="createDate" column="create_date" />
		<result property="workDate" column="work_date" />
		<result property="roleId" column="role_id" />
		<result property="isAdmin" column="is_admin" />
		<!--封装User里面的对象 例如：User里面有一个Role对象 名为：role 里面有个属性叫id则 <association property="role" 
			javaType="Role"> <result column="id" property="id"/> </association> -->
	</resultMap>
	<insert id="addUser" parameterType="User">
		insert into
		user(id,name,email,login_password,sex,tel,state,creater_id,create_date,work_date,role_id,is_admin)
		values(#{id},#{name},#{email},#{login_password},#{sex},#{tel},#{state},#{creater_id},#{create_date},#{work_date},#{role_id},#{work_date})
	</insert>

	<update id="modifyUser" parameterType="User">
		update user
		<set>
			<if test="name!=null">name=#{name},</if>
			<if test="email!=null">email=#{email},</if>
		</set>
		<where>
			<if test="id!=null">
				and id=#{id}
			</if>
		</where>
	</update>

	<delete id="removeUser" parameterType="User">
		delete from user
		<where>
			<if test="id!=null">and id=#{id}</if>
			<if test="name!=null">and name=#{name}</if>
		</where>
	</delete>

	<select id="queryUserById" parameterType="string" resultMap="resultUser" >
		select
		id,name,email,login_password,sex,tel,state,creater_id,create_date,work_date,role_id,is_admin
		from user where id=#{id}
	</select>


	<select id="queryUserByIds" resultMap="resultUser" >
		select
		id,name,email,login_password,sex,tel,state,creater_id,create_date,work_date,role_id,is_admin
		from user where id in 
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>		
	</select>

	<select id="queryUserList" parameterType="User" resultMap="resultUser">
		<bind name="names" value="'%'+_parameter.getName()+'%'"/>
		select
		id,name,email,login_password,sex,tel,state,creater_id,create_date,work_date,role_id,is_admin
		from user
		<where>
			<if test="id!=null">
				and id=#{id}
			</if>
			<if test="name!=null">
				and name like #{names}
			</if>
			<if test="sex!=null">
				and sex=#{sex}
			</if>
			<if test="state!=null">
				and state=#{state}
			</if>
			<choose>
				<when test="isAdmin!=null">
					and is_admin=#{isAdmin}
				</when>
				<otherwise>
					and is_admin=1
				</otherwise>
			</choose>
		</where>
	</select>

</mapper>